{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uzivatel\\\\Desktop\\\\urs\\\\src\\\\App.js\";\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n// import LoginForm from \"./LoginForm\";\n// import Dashboard from \"./Dashboard\";\n// import BusinessInfoSystems from \"./subjects/BusinessInfoSystems/BusinessInfoSystems\";\n// import Grid from \"./subjects/Grid/Grid\";\n// import Urs from \"./subjects/Urs/Urs\";\n// import Multimedija from \"./subjects/Multimedija/Multimedija\";\n// import Medicinski from \"./subjects/Medicinski/Medicinski\";\n// import Paralelno from \"./subjects/Paralelno/Paralelno\";\n// import LandingPage from \"./LandingPage\";\n// import QRCodeScanner from \"./scanner/QRCodeScanner\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<LandingPage />} />\n//         <Route exact path=\"/login\" element={<LoginForm />} />\n//         <Route path=\"/dashboard\" element={<Dashboard />} />\n//         <Route\n//           path=\"/business-info-systems\"\n//           element={<BusinessInfoSystems />}\n//         />{\" \"}\n//         {/* Dodano */}\n//         <Route path=\"/grid-computer-systems\" element={<Grid />} />{\" \"}\n//         {/* Dodano */}\n//         <Route path=\"/urs\" element={<Urs />} /> {/* Dodano */}\n//         <Route path=\"/multimedija\" element={<Multimedija />} /> {/* Dodano */}\n//         <Route path=\"/medicinski\" element={<Medicinski />} /> {/* Dodano */}\n//         <Route path=\"/paralelno\" element={<Paralelno />} /> {/* Dodano */}\n//         <Route path=\"/scanner\" element={<QRCodeScanner />} /> {/* Dodano */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// src/App.jsx\nimport React from \"react\";\nimport Html5QrcodePlugin from \"./scanner/Html5QrcodePlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // Callback funkcija koja obrađuje rezultate skeniranja\n  const onNewScanResult = (decodedText, decodedResult) => {\n    console.log(\"Decoded text: \", decodedText); // Ispisuje podatke iz QR koda\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Html5QrcodePlugin, {\n      fps: 10 // Frames per second\n      ,\n      qrbox: 250 // Veličina okvira za skeniranje\n      ,\n      disableFlip: false // Omogućava ili onemogućava flip kamere\n      ,\n      qrCodeSuccessCallback: onNewScanResult // Callback za uspješan rezultat\n      ,\n      qrCodeErrorCallback: error => console.error(\"QR Error: \", error) // Callback za greške\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Html5QrcodePlugin","jsxDEV","_jsxDEV","App","onNewScanResult","decodedText","decodedResult","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fps","qrbox","disableFlip","qrCodeSuccessCallback","qrCodeErrorCallback","error","_c","$RefreshReg$"],"sources":["C:/Users/Uzivatel/Desktop/urs/src/App.js"],"sourcesContent":["// import React from \"react\";\r\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\n// import LoginForm from \"./LoginForm\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import BusinessInfoSystems from \"./subjects/BusinessInfoSystems/BusinessInfoSystems\";\r\n// import Grid from \"./subjects/Grid/Grid\";\r\n// import Urs from \"./subjects/Urs/Urs\";\r\n// import Multimedija from \"./subjects/Multimedija/Multimedija\";\r\n// import Medicinski from \"./subjects/Medicinski/Medicinski\";\r\n// import Paralelno from \"./subjects/Paralelno/Paralelno\";\r\n// import LandingPage from \"./LandingPage\";\r\n// import QRCodeScanner from \"./scanner/QRCodeScanner\";\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<LandingPage />} />\r\n//         <Route exact path=\"/login\" element={<LoginForm />} />\r\n//         <Route path=\"/dashboard\" element={<Dashboard />} />\r\n//         <Route\r\n//           path=\"/business-info-systems\"\r\n//           element={<BusinessInfoSystems />}\r\n//         />{\" \"}\r\n//         {/* Dodano */}\r\n//         <Route path=\"/grid-computer-systems\" element={<Grid />} />{\" \"}\r\n//         {/* Dodano */}\r\n//         <Route path=\"/urs\" element={<Urs />} /> {/* Dodano */}\r\n//         <Route path=\"/multimedija\" element={<Multimedija />} /> {/* Dodano */}\r\n//         <Route path=\"/medicinski\" element={<Medicinski />} /> {/* Dodano */}\r\n//         <Route path=\"/paralelno\" element={<Paralelno />} /> {/* Dodano */}\r\n//         <Route path=\"/scanner\" element={<QRCodeScanner />} /> {/* Dodano */}\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// src/App.jsx\r\nimport React from \"react\";\r\nimport Html5QrcodePlugin from \"./scanner/Html5QrcodePlugin\";\r\n\r\nconst App = () => {\r\n  // Callback funkcija koja obrađuje rezultate skeniranja\r\n  const onNewScanResult = (decodedText, decodedResult) => {\r\n    console.log(\"Decoded text: \", decodedText); // Ispisuje podatke iz QR koda\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>QR Scanner</h1>\r\n      <Html5QrcodePlugin\r\n        fps={10} // Frames per second\r\n        qrbox={250} // Veličina okvira za skeniranje\r\n        disableFlip={false} // Omogućava ili onemogućava flip kamere\r\n        qrCodeSuccessCallback={onNewScanResult} // Callback za uspješan rezultat\r\n        qrCodeErrorCallback={(error) => console.error(\"QR Error: \", error)} // Callback za greške\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA,MAAMC,eAAe,GAAGA,CAACC,WAAW,EAAEC,aAAa,KAAK;IACtDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,WAAW,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEH,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAAQ,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBZ,OAAA,CAACF,iBAAiB;MAChBe,GAAG,EAAE,EAAG,CAAC;MAAA;MACTC,KAAK,EAAE,GAAI,CAAC;MAAA;MACZC,WAAW,EAAE,KAAM,CAAC;MAAA;MACpBC,qBAAqB,EAAEd,eAAgB,CAAC;MAAA;MACxCe,mBAAmB,EAAGC,KAAK,IAAKb,OAAO,CAACa,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAE,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GAlBIlB,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}