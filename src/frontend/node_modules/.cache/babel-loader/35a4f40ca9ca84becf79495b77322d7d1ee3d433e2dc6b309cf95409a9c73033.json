{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uzivatel\\\\Desktop\\\\urs\\\\src\\\\scanner\\\\QRCodeScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeScanner = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const scannerRef = useRef(null); // reference for the scanner container\n\n  useEffect(() => {\n    // Provjeri da je scannerRef referenca na pravi DOM element\n    if (scannerRef.current) {\n      const scanner = new Html5QrcodeScanner(scannerRef.current, {\n        fps: 10,\n        // Frames per second\n        qrbox: 250 // Velicina okvira za skeniranje\n      });\n\n      // Pokreni skener\n      scanner.render(onScanSuccess, onScanError);\n\n      // Cleanup funkcija koja zaustavlja skener pri unmountu\n      return () => {\n        scanner.clear();\n      };\n    }\n  }, []); // Prazni array osigurava da se useEffect pokreće samo jednom kad je komponenta mountana\n\n  // Funkcija koja se poziva pri uspješnom skeniranju\n  function onScanSuccess(decodedText, decodedResult) {\n    setData(decodedText); // Postavlja pročitane podatke u stanje\n  }\n\n  // Funkcija koja se poziva ako dođe do greške pri skeniranju\n  function onScanError(error) {\n    console.error(error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scannerRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pro\\u010Ditani podaci:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data ? data : \"Nema podataka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeScanner, \"cc2Pmp48IxxCkAppngbhDbBK/RM=\");\n_c = QRCodeScanner;\nexport default QRCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QRCodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Html5QrcodeScanner","jsxDEV","_jsxDEV","QRCodeScanner","_s","data","setData","scannerRef","current","scanner","fps","qrbox","render","onScanSuccess","onScanError","clear","decodedText","decodedResult","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Uzivatel/Desktop/urs/src/scanner/QRCodeScanner.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\r\n\r\nconst QRCodeScanner = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const scannerRef = useRef(null); // reference for the scanner container\r\n\r\n  useEffect(() => {\r\n    // Provjeri da je scannerRef referenca na pravi DOM element\r\n    if (scannerRef.current) {\r\n      const scanner = new Html5QrcodeScanner(scannerRef.current, {\r\n        fps: 10, // Frames per second\r\n        qrbox: 250, // Velicina okvira za skeniranje\r\n      });\r\n\r\n      // Pokreni skener\r\n      scanner.render(onScanSuccess, onScanError);\r\n\r\n      // Cleanup funkcija koja zaustavlja skener pri unmountu\r\n      return () => {\r\n        scanner.clear();\r\n      };\r\n    }\r\n  }, []); // Prazni array osigurava da se useEffect pokreće samo jednom kad je komponenta mountana\r\n\r\n  // Funkcija koja se poziva pri uspješnom skeniranju\r\n  function onScanSuccess(decodedText, decodedResult) {\r\n    setData(decodedText); // Postavlja pročitane podatke u stanje\r\n  }\r\n\r\n  // Funkcija koja se poziva ako dođe do greške pri skeniranju\r\n  function onScanError(error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>QR Scanner</h1>\r\n      <div ref={scannerRef} style={{ width: \"100%\", height: \"100%\" }}></div>\r\n      <div>\r\n        <h3>Pročitani podaci:</h3>\r\n        <p>{data ? data : \"Nema podataka\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeScanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,kBAAkB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,UAAU,CAACC,OAAO,EAAE;MACtB,MAAMC,OAAO,GAAG,IAAIT,kBAAkB,CAACO,UAAU,CAACC,OAAO,EAAE;QACzDE,GAAG,EAAE,EAAE;QAAE;QACTC,KAAK,EAAE,GAAG,CAAE;MACd,CAAC,CAAC;;MAEF;MACAF,OAAO,CAACG,MAAM,CAACC,aAAa,EAAEC,WAAW,CAAC;;MAE1C;MACA,OAAO,MAAM;QACXL,OAAO,CAACM,KAAK,CAAC,CAAC;MACjB,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,SAASF,aAAaA,CAACG,WAAW,EAAEC,aAAa,EAAE;IACjDX,OAAO,CAACU,WAAW,CAAC,CAAC,CAAC;EACxB;;EAEA;EACA,SAASF,WAAWA,CAACI,KAAK,EAAE;IAC1BC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;EAEA,oBACEhB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAKuB,GAAG,EAAElB,UAAW;MAACmB,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtEtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BtB,OAAA;QAAAkB,QAAA,EAAIf,IAAI,GAAGA,IAAI,GAAG;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}