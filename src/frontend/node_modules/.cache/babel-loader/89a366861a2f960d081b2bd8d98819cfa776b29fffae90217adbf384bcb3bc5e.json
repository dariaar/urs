{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uzivatel\\\\Desktop\\\\urs\\\\src\\\\scanner\\\\Html5QrcodePlugin.jsx\",\n  _s = $RefreshSig$();\n// src/Html5QrcodePlugin.jsx\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrcodeRegionId = \"html5qr-code-full-region\";\n\n// Funkcija za kreiranje konfiguracije za skener\nconst createConfig = props => {\n  let config = {};\n  if (props.fps) {\n    config.fps = props.fps;\n  }\n  if (props.qrbox) {\n    config.qrbox = props.qrbox;\n  }\n  if (props.aspectRatio) {\n    config.aspectRatio = props.aspectRatio;\n  }\n  if (props.disableFlip !== undefined) {\n    config.disableFlip = props.disableFlip;\n  }\n  return config;\n};\nconst Html5QrcodePlugin = props => {\n  _s();\n  useEffect(() => {\n    // Kada se komponenta montira\n    const config = createConfig(props);\n    const verbose = props.verbose === true;\n\n    // Obavezno postaviti success callback funkciju\n    if (!props.qrCodeSuccessCallback) {\n      throw new Error(\"qrCodeSuccessCallback is required callback.\");\n    }\n    const html5QrcodeScanner = new Html5QrcodeScanner(qrcodeRegionId, config, verbose);\n\n    // Pokrećemo skener\n    html5QrcodeScanner.render(props.qrCodeSuccessCallback, props.qrCodeErrorCallback);\n\n    // Cleanup funkcija koja se poziva kad se komponenta unmounta\n    return () => {\n      html5QrcodeScanner.clear().catch(error => {\n        console.error(\"Failed to clear html5QrcodeScanner. \", error);\n      });\n    };\n  }, []); // Prazni array osigurava da useEffect pokreće samo jednom kad je komponenta montirana\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: qrcodeRegionId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(Html5QrcodePlugin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Html5QrcodePlugin;\nexport default Html5QrcodePlugin;\nvar _c;\n$RefreshReg$(_c, \"Html5QrcodePlugin\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","jsxDEV","_jsxDEV","qrcodeRegionId","createConfig","props","config","fps","qrbox","aspectRatio","disableFlip","undefined","Html5QrcodePlugin","_s","verbose","qrCodeSuccessCallback","Error","html5QrcodeScanner","render","qrCodeErrorCallback","clear","catch","error","console","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Uzivatel/Desktop/urs/src/scanner/Html5QrcodePlugin.jsx"],"sourcesContent":["// src/Html5QrcodePlugin.jsx\r\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst qrcodeRegionId = \"html5qr-code-full-region\";\r\n\r\n// Funkcija za kreiranje konfiguracije za skener\r\nconst createConfig = (props) => {\r\n  let config = {};\r\n  if (props.fps) {\r\n    config.fps = props.fps;\r\n  }\r\n  if (props.qrbox) {\r\n    config.qrbox = props.qrbox;\r\n  }\r\n  if (props.aspectRatio) {\r\n    config.aspectRatio = props.aspectRatio;\r\n  }\r\n  if (props.disableFlip !== undefined) {\r\n    config.disableFlip = props.disableFlip;\r\n  }\r\n  return config;\r\n};\r\n\r\nconst Html5QrcodePlugin = (props) => {\r\n  useEffect(() => {\r\n    // Kada se komponenta montira\r\n    const config = createConfig(props);\r\n    const verbose = props.verbose === true;\r\n\r\n    // Obavezno postaviti success callback funkciju\r\n    if (!props.qrCodeSuccessCallback) {\r\n      throw new Error(\"qrCodeSuccessCallback is required callback.\");\r\n    }\r\n\r\n    const html5QrcodeScanner = new Html5QrcodeScanner(\r\n      qrcodeRegionId,\r\n      config,\r\n      verbose\r\n    );\r\n\r\n    // Pokrećemo skener\r\n    html5QrcodeScanner.render(\r\n      props.qrCodeSuccessCallback,\r\n      props.qrCodeErrorCallback\r\n    );\r\n\r\n    // Cleanup funkcija koja se poziva kad se komponenta unmounta\r\n    return () => {\r\n      html5QrcodeScanner.clear().catch((error) => {\r\n        console.error(\"Failed to clear html5QrcodeScanner. \", error);\r\n      });\r\n    };\r\n  }, []); // Prazni array osigurava da useEffect pokreće samo jednom kad je komponenta montirana\r\n\r\n  return <div id={qrcodeRegionId} />;\r\n};\r\n\r\nexport default Html5QrcodePlugin;\r\n"],"mappings":";;AAAA;AACA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAG,0BAA0B;;AAEjD;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,KAAK,CAACE,GAAG,EAAE;IACbD,MAAM,CAACC,GAAG,GAAGF,KAAK,CAACE,GAAG;EACxB;EACA,IAAIF,KAAK,CAACG,KAAK,EAAE;IACfF,MAAM,CAACE,KAAK,GAAGH,KAAK,CAACG,KAAK;EAC5B;EACA,IAAIH,KAAK,CAACI,WAAW,EAAE;IACrBH,MAAM,CAACG,WAAW,GAAGJ,KAAK,CAACI,WAAW;EACxC;EACA,IAAIJ,KAAK,CAACK,WAAW,KAAKC,SAAS,EAAE;IACnCL,MAAM,CAACI,WAAW,GAAGL,KAAK,CAACK,WAAW;EACxC;EACA,OAAOJ,MAAM;AACf,CAAC;AAED,MAAMM,iBAAiB,GAAIP,KAAK,IAAK;EAAAQ,EAAA;EACnCb,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,MAAM,GAAGF,YAAY,CAACC,KAAK,CAAC;IAClC,MAAMS,OAAO,GAAGT,KAAK,CAACS,OAAO,KAAK,IAAI;;IAEtC;IACA,IAAI,CAACT,KAAK,CAACU,qBAAqB,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;IAChE;IAEA,MAAMC,kBAAkB,GAAG,IAAIlB,kBAAkB,CAC/CI,cAAc,EACdG,MAAM,EACNQ,OACF,CAAC;;IAED;IACAG,kBAAkB,CAACC,MAAM,CACvBb,KAAK,CAACU,qBAAqB,EAC3BV,KAAK,CAACc,mBACR,CAAC;;IAED;IACA,OAAO,MAAM;MACXF,kBAAkB,CAACG,KAAK,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAC1CC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOpB,OAAA;IAAKsB,EAAE,EAAErB;EAAe;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACf,EAAA,CAhCID,iBAAiB;AAAAiB,EAAA,GAAjBjB,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}